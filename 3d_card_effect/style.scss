// Compile : sass sites/3d-card-hover/style.scss sites/3d-card-hover/css/style.css
/*
    HTML STRUCTURE
    <div class="anchor">
        <div class="layer"></div>
        <div class="layer"></div>
        <div class="layer"></div>
        <div class="layer">This is the top layer</div>
    </div>
*/

@mixin layers($anchorColor, $layerColor, $numOfLayers, $distance, $transition) {
    .layer {
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba($layerColor,0);
        opacity: 1;
        pointer-events: none;
        
        transition: transform $transition, background-color $transition;
    }
    .anchor {
        position: relative;
        width: 200px;
        height: 100px;
        padding: 0;
        background: $anchorColor;
        transform-origin: bottom center;
        border: none;
        //transform: rotate(23deg) skew(-30deg);
        
        z-index: 2;

        transition: outline 0.6s;
        &:hover {
            outline: -webkit-focus-ring-color auto 5px;
        }

        // work out what the opacity should be
        $opacityDistribution: 0.9 / $numOfLayers;

        @for $i from 1 through $numOfLayers {
            &:hover .layer:nth-child(#{$i + 1}),&.focused .layer:nth-child(#{$i + 1}) {
                transform: translate(#{($i * -1) * ($distance*-1)}, #{($i * -1) * $distance});
                background: rgba($layerColor, $i * $opacityDistribution);
            }
        }
    }
}


body {
    margin:0;padding:0;
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    box-sizing: border-box;
}

h1 {
    margin: 0;
    position: absolute;
    left: 50%; top: 50%;
    transform: translate(-50%,-50%);
    color: white;
}

.wrapper {
    transform: rotate(-23deg) skew(30deg);
    padding: 25px;
    background: lightgrey;
}

.wrapper > * {
    margin-bottom: 20px;

    &:last-child {
        margin-bottom: 0;
    }
}

.ianchor {
    position: relative;
    width: 350px;
    height: 80px;
    transition: outline 0.6s;

    &:hover, &.focused {
        outline: -webkit-focus-ring-color auto 5px;
    }


    @for $i from 1 through 3 {
        &:hover .ilayer:nth-child(#{$i + 1}) {
            transform: translate(#{($i * -1) * -5px}, #{($i * -1) * 5px});
            background: rgba(white, $i * (0.9 / 3));
        }
    }
}

.ilayer {
    background: white;
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
    transition: transform 0.6s, background-color 0.6s;
}

input[type='text'] {
    display: block;
    pointer-events: all;
    font-size: 32px;
    border: none;
    box-sizing: border-box;
    padding-left: 10px;
}

.focused, .focused .layer {
    @for $i from 1 through 3 {
        & .ilayer:nth-child(#{$i + 1}) {
            transform: translate(#{($i * -1) * -5px}, #{($i * -1) * 5px});
            background: rgba(white, $i * (0.9 / 3));
        }
    }
}


@include layers(rgb(30,30,30),rgb(0, 115, 128),3,5px,0.6s);